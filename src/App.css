:root {
  /* neon-retro palette */
  --bg: #030014; /* very dark */
  --panel: #060016;
  --neon-cyan: #00f7ff;
  --neon-magenta: #ff4db8;
  --neon-yellow: #fff25c;
  --muted: #9fb1c5;
  --text: #e8faff; /* high contrast */
  --glass: rgba(255, 255, 255, 0.03);
  --card-shadow: 0 12px 48px rgba(2, 8, 23, 0.7);
}

/* App shell */
.app {
  font-family: Inter, ui-sans-serif, system-ui, -apple-system, "Segoe UI",
    Roboto, "Helvetica Neue", Arial;
  color: var(--text);
  padding: 18px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center; /* center vertically */
  gap: 12px;
  min-height: 100vh;
  background: radial-gradient(
      800px 400px at 10% 10%,
      rgba(0, 87, 120, 0.08),
      transparent 10%
    ),
    linear-gradient(180deg, var(--bg), #040814 120%);
}

.app h1 {
  margin: 0;
  letter-spacing: 1px;
  color: var(--neon-magenta);
  text-shadow: 0 6px 18px rgba(255, 77, 184, 0.18), 0 2px 0 rgba(0, 0, 0, 0.6);
  font-size: clamp(1.2rem, 3.2vw, 2rem);
}

/* controls layout */
.controls {
  display: flex;
  gap: 12px;
  align-items: center;
  width: min(100%, 980px);
  justify-content: space-between;
}

.difficulty {
  display: flex;
  align-items: center;
  gap: 8px;
}
.difficulty label {
  color: var(--muted);
  font-size: 0.95rem;
}

.buttons {
  display: flex;
  gap: 8px;
}
.buttons button {
  padding: 0.5rem 0.9rem;
  border-radius: 10px;
  border: 1px solid rgba(255, 255, 255, 0.04);
  background: linear-gradient(
    180deg,
    rgba(0, 0, 0, 0.5),
    rgba(255, 255, 255, 0.02)
  );
  color: var(--neon-cyan);
  font-weight: 700;
  box-shadow: 0 6px 30px rgba(0, 255, 255, 0.06), 0 2px 6px rgba(0, 0, 0, 0.6);
  cursor: pointer;
  transition: transform 120ms ease, box-shadow 120ms ease, color 120ms ease;
}
.buttons button:hover {
  transform: translateY(-2px);
  color: var(--neon-yellow);
  box-shadow: 0 16px 48px rgba(255, 77, 184, 0.06);
}

/* responsive canvas wrapper - centers and keeps aspect */
.canvas-wrap {
  width: 100%;
  max-width: 1200px;
  display: flex;
  justify-content: center;
  align-items: center;
  /* Limit the canvas container height so it fits inside the viewport (header + footer reserved) */
  max-height: calc(100vh - 160px);
  padding: 8px;
  box-sizing: border-box;
}

canvas {
  /* Default: allow the canvas to size responsively without causing horizontal overflow.
    Height is chosen to fit within available viewport height while also respecting width. */
  width: auto;
  height: min(calc(100vh - 160px), calc((100vw - 40px) * 9 / 16));
  max-width: 100%;
  max-height: 100%;
  aspect-ratio: 16/9;
  background: linear-gradient(180deg, rgba(6, 0, 24, 0.6), rgba(2, 0, 10, 0.9));
  border-radius: 10px;
  box-shadow: 0 20px 60px rgba(0, 77, 120, 0.12), 0 8px 30px rgba(2, 8, 23, 0.6);
  display: block;
  border: 1px solid rgba(255, 77, 184, 0.06);
}

.legend {
  width: min(100%, 980px);
  color: var(--muted);
  font-size: 0.95rem;
  text-align: left;
}

/* Scoreboard */
.scoreboard {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 18px;
  padding: 10px 14px;
  background: linear-gradient(
    180deg,
    rgba(255, 255, 255, 0.02),
    rgba(0, 0, 0, 0.06)
  );
  border-radius: 10px;
  margin-bottom: 10px;
  border: 1px solid rgba(255, 255, 255, 0.02);
}
.score {
  display: flex;
  flex-direction: column;
  align-items: center;
  min-width: 56px;
}
.score .label {
  font-size: 0.8rem;
  color: var(--muted);
}
.score .value {
  font-size: 1.6rem;
  font-weight: 700;
  color: var(--text);
}
.score-sep {
  color: var(--muted);
  font-weight: 700;
}

/* Palette selector */
.palette {
  display: flex;
  align-items: center;
  gap: 8px;
}
.palette-label {
  color: var(--muted);
  font-size: 0.9rem;
}
.palette-toggle {
  display: flex;
  gap: 6px;
}
.palette-toggle button {
  padding: 6px 10px;
  border-radius: 8px;
  border: 1px solid rgba(255, 255, 255, 0.04);
  background: transparent;
  color: var(--muted);
  cursor: pointer;
}
.palette-toggle button.active {
  color: var(--text);
  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.6);
  transform: translateY(-2px);
}

/* Theme overrides */
.theme-neon {
  --neon-cyan: #00f7ff;
  --neon-magenta: #ff4db8;
  --neon-yellow: #fff25c;
}
.theme-amber {
  --neon-cyan: #ffd86b;
  --neon-magenta: #ffb86b;
  --neon-yellow: #ffe9a6;
}
.theme-green {
  --neon-cyan: #9effa6;
  --neon-magenta: #4df2a6;
  --neon-yellow: #caffd4;
}

/* Apply theme to scoreboard accents */
.theme-neon .score .value {
  color: var(--neon-cyan);
}
.theme-amber .score .value {
  color: var(--neon-cyan);
}
.theme-green .score .value {
  color: var(--neon-cyan);
}

/* mobile: encourage landscape for gameplay and reflow controls */
@media (max-width: 720px) {
  .app {
    padding: 12px;
  }
  .controls {
    flex-direction: row;
    gap: 10px;
  }
  .legend {
    font-size: 0.9rem;
  }
  /* On small screens, reduce the reserved header/footer space so canvas can be bigger */
  .canvas-wrap {
    max-height: calc(100vh - 112px);
    padding: 6px;
  }
}

/* If device is small and in portrait orientation, show a 'best in landscape' hint */
@media (max-width: 720px) and (orientation: portrait) {
  .legend::after {
    content: " â€” best in landscape";
    color: var(--muted);
    margin-left: 8px;
  }
}

/* small tweaks for very small screens */
@media (max-width: 420px) {
  .controls {
    flex-direction: column;
    align-items: stretch;
  }
  .buttons {
    justify-content: space-between;
  }

  /* further limit canvas on very small devices */
  .canvas-wrap {
    max-height: calc(100vh - 96px);
  }
}

/* Mobile rotate overlay (only show on small portrait screens) */
.mobile-rotate-overlay {
  display: none; /* default hidden */
  position: fixed;
  inset: 0;
  background: rgba(0, 0, 0, 0.6);
  z-index: 1600;
  align-items: center;
  justify-content: center;
  text-align: center;
  color: var(--text);
  padding: 20px;
}
.mobile-rotate-overlay .rotate-inner {
  background: rgba(255, 255, 255, 0.04);
  padding: 16px 20px;
  border-radius: 12px;
  box-shadow: var(--card-shadow);
}
@media (max-width: 720px) and (orientation: portrait) {
  .mobile-rotate-overlay {
    display: flex;
  }
}

/* Prevent horizontal overflow from the page */
html,
body {
  overflow-x: hidden;
}

/* When in small landscape, force the canvas to fit the available height and shrink width accordingly */
.canvas-wrap.landscape-fit {
  width: 100%;
  max-width: none;
  padding: 4px;
}
.canvas-wrap.landscape-fit canvas {
  height: calc(
    100vh - 88px
  ); /* leave space for a small top bar and bottom controls */
  width: auto;
  max-width: 100%;
  aspect-ratio: 16/9;
}

/* bottom control bar on small landscape */
.mobile-bottom-controls {
  background: rgba(2, 6, 24, 0.6);
  border-radius: 12px;
  padding: 6px 8px;
  backdrop-filter: blur(6px);
  display: flex;
  gap: 8px;
  align-items: center;
  justify-content: space-between;
}

/* side controls for small landscape */
.side-controls {
  display: flex;
  flex-direction: column;
  gap: 8px;
  align-items: center;
  justify-content: center;
  color: var(--text);
  position: relative;
  width: 56px;
  padding-top: 8px;
  padding-bottom: 8px;
}
.side-controls.left {
  margin-right: 6px;
}
.side-controls.right {
  margin-left: 6px;
}

.canvas-wrap.reduced-width {
  max-width: calc(100vw - 140px);
}

/* Add extra top/bottom padding for small landscape so the playfield is fully visible */
@media (max-width: 720px) and (orientation: landscape) {
  .canvas-wrap.landscape-fit {
    padding-top: 12px;
    padding-bottom: 12px;
  }
}

/* stronger score pop: handled on canvas draw by scaling and added glow using shadow */
.score-glow {
  filter: drop-shadow(0 0 12px rgba(255, 255, 255, 0.15));
}
